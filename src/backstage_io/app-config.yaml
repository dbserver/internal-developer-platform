app:
  title: Db developer portal
  baseUrl: http://localhost:3000

  support:
    url: https://github.com/dbserver/internal-developer-platform/issues # Used by common ErrorPage
    items: # Used by common SupportButton component
      - title: Issues
        icon: github
        links:
          - url: https://github.com/dbserver/internal-developer-platform/issues
            title: GitHub Issues

organization:
  name: DbServer

backend:
  # Used for enabling authentication, secret is shared by all backend plugins
  # See https://backstage.io/docs/auth/service-to-service-auth for
  # information on the format
  # auth:
  #   keys:
  #     - secret: ${BACKEND_SECRET}
  baseUrl: http://localhost:7007
  listen:
    port: 7007
    # Uncomment the following host directive to bind to specific interfaces
    # host: 127.0.0.1
  csp:
    connect-src: ["'self'", 'http:', 'https:']
    img-src: ["'self'", 'data:', 'https://avatars.githubusercontent.com']
    # Content-Security-Policy directives follow the Helmet format: https://helmetjs.github.io/#reference
    # Default Helmet Content-Security-Policy values can be removed by setting the key to false
  cors:
    origin: http://localhost:3000
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true
  # This is for local development only, it is not recommended to use this in production
  # The production database configuration is stored in app-config.production.yaml
  database:
    ###### In memory database #######
    client: better-sqlite3
    connection: ':memory:'

  cache:
    store: memory

    ###### PostgreSQL database #######
    # client: pg
    # connection:
    #   host: localhost
    #   port: 5432
    #   user: developer-portal-user
    #   password: developer-portal-password
    #   database: idp-db
    #   ensureExists: false

  # workingDirectory: /tmp # Use this to configure a working directory for the scaffolder, defaults to the OS temp-dir

integrations:
  github:
    - host: github.com
      # This is a Personal Access Token or PAT from GitHub. You can find out how to generate this token, and more information
      # about setting up the GitHub integration here: https://backstage.io/docs/getting-started/configuration#setting-up-a-github-integration
      token: ${GITHUB_TOKEN}
    ### Example for how to add your GitHub Enterprise instance using the API:
    # - host: ghe.example.net
    #   apiBaseUrl: https://ghe.example.net/api/v3
    #   token: ${GHE_TOKEN}

kubernetes:
  serviceLocatorMethod:
    type: multiTenant
  clusterLocatorMethods:
    - type: config
      clusters:
        - url: ${K8S_URL}
          name: development
          authProvider: serviceAccount
          skipTLSVerify: true
          skipMetricsLookup: true
          serviceAccountToken: ${K8S_TOKEN}

proxy:
  '/argocd/api':
    target: https://localhost:8080/api/v1/
    changeOrigin: true
    secure: false
    headers:
      Cookie:
        $env: ARGOCD_AUTH_TOKEN

  # '/grafana/api':
  #   # May be an internal DNS
  #   target: http://grafana.monitoring.svc/
  #   headers:
  #     Authorization: Bearer ${GRAFANA_TOKEN}

  # '/prometheus/api':
  #   # url to the api and path of your hosted prometheus instance
  #   target: http://prometheus-server.monitoring.svc/api/v1/

  ### Example for how to add a proxy endpoint for the frontend.
  ### A typical reason to do this is to handle HTTPS and CORS for internal services.
  # '/test':
  #   target: 'https://example.com'
  #   changeOrigin: true

# sonarqube:
#   baseUrl: https://sonar.diegoluisi.eti.br
#   apiKey: '${SONARQUBE_TOKEN}'

# grafana:
#   # Publicly accessible domain
#   domain: https://grafana.diegoluisi.eti.br

# Reference documentation http://backstage.io/docs/features/techdocs/configuration
# Note: After experimenting with basic setup, use CI/CD to generate docs
# and an external cloud storage when deploying TechDocs for production use-case.
# https://backstage.io/docs/features/techdocs/how-to-guides#how-to-migrate-from-techdocs-basic-to-recommended-deployment-approach
techdocs:
  builder: 'local' # Alternatives - 'external'
  generator:
    runIn: 'local' #'docker' # Alternatives - 'local'
    mkdocs:
      # (Optional)  techdocs.generator.omitTechdocsCoreMkdocsPlugin can be used to disable automatic addition of techdocs-core plugin to the mkdocs.yaml files.
      # Defaults to false, which means that the techdocs-core plugin is always added to the mkdocs file.
      omitTechdocsCorePlugin: false

      # (Optional and not recommended) Configures the techdocs generator to
      # attempt to ensure an index.md exists falling back to using <docs-dir>/README.md
      # or README.md in case a default <docs-dir>/index.md is not provided.
      # Note that https://www.mkdocs.org/user-guide/configuration/#edit_uri behavior
      # will be broken in these scenarios.
      legacyCopyReadmeMdToIndexMd: false
  publisher:
    type: 'local' # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.
    local:
      # (Optional). Set this to specify where the generated documentation is stored.
      publishDirectory: '/src/backstage_io/docs'

auth:
  environment: development
  providers:
    github:
      development:
        clientId: ${GITHUB_CLIENT_ID}
        clientSecret: ${GITHUB_CLIENT_SECRET}

scaffolder:
  # see https://backstage.io/docs/features/software-templates/configuration for software template options

catalog:
  import:
    entityFilename: catalog-info.yaml
    pullRequestBranchName: backstage-integration
  rules:
    - allow:
        - API
        - Component
        - Domain
        - Group
        - System
        - User
        - Template
        - Resource
        - Location

  locations:
    - type: url
      target: https://github.com/dbserver/backstage-catalog/blob/main/devxp/all.yaml
    # - type: file
    #   target: ../../examples/entities.yaml

    # Local example template
    # - type: file
    #   target: ../../examples/template/template.yaml
    #   rules:
    #     - allow: [Template]

    #   - type: file
    #     target: ../../examples/template-java/template.yml
    #     rules:
    #       - allow: [Template]

    # Local example organizational data
    # - type: file
    #   target: ../../examples/org.yaml
    #   rules:
    #     - allow: [User, Group]

    ## Uncomment these lines to add more example data
    # - type: url
    #   target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all.yaml
    #   rules:
    #     - allow: [Component, System, API, Resource, Location, Template]

    ## Uncomment these lines to add an example org
    # - type: url
    #   target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/acme-corp.yaml
    #   rules:
    #     - allow: [Component, System, API, Resource, Location, Template]
